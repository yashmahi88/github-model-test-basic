name: Azure AI Foundry Prediction

on:
  workflow_dispatch:

jobs:
  predict:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      AZURE_STORAGE_ACCOUNT: sa1testeicyashmahin9324
      AZURE_STORAGE_CONTAINER: fileupload-test-data-index
      AZURE_SEARCH_NAME: rag-pipeline-test1
      AZURE_SEARCH_INDEX: test-name-new1
      AZURE_OPENAI_DEPLOYMENT: gpt-4o
      AZURE_RESOURCE_GROUP: sa1_test_eic_YashMahindrakar # Replace this
      AZURE_SUBSCRIPTION: 664b6097-19f2-42a3-be95-a4a6b4069f6b      # Replace this
      AZURE_OPENAI_ENDPOINT: https://rag-pipeline-test.openai.azure.com/ # Replace this
      AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Listing blob files
        run: |
          az storage blob list \
            --account-name "$AZURE_STORAGE_ACCOUNT" \
            --container-name "$AZURE_STORAGE_CONTAINER" \
            --auth-mode key \
            --account-key "${{ secrets.AZURE_STORAGE_KEY }}" \
            --output table


      - name: Download Knowledge from Blob Storage
        run: |
          mkdir -p blob-data
          az storage blob download-batch \
            --account-name "$AZURE_STORAGE_ACCOUNT" \
            --destination blob-data \
            --source "$AZURE_STORAGE_CONTAINER" \
            --auth-mode key \
            --account-key "${{ secrets.AZURE_STORAGE_KEY }}"
          

      - name: Extract Workflow
        run: |
          mkdir -p target
          cp .github/workflows/main-ci.yml target/workflow_to_analyze.yml

      - name: Call Azure OpenAI GPT-4o for Prediction
        id: final-analysis
        run: |
            echo "Building Prompt..."
            RULES=$(cat blob-data/dynamic_combined_logs.txt)
            WORKFLOW_CONTENT=$(cat target/workflow_to_analyze.yml)
            # Indent rules and workflow
            INDENTED_RULES=$(echo "$RULES" | sed 's/^/    /')
            INDENTED_WORKFLOW=$(echo "$WORKFLOW_CONTENT" | sed 's/^/    /')
            PROMPT=$(cat <<END_PROMPT
              You are constrained to ONLY the extracted rules below. Do not use external knowledge.
              RULES:
            $INDENTED_RULES
              WORKFLOW TO ANALYZE:
            $INDENTED_WORKFLOW
              INSTRUCTIONS:
              1. Check workflow against each relevant rule
              2. Count PASS/FAIL conditions
              Respond ONLY in this format:
              APPLICABLE_RULES: [number]
              SATISFIED_RULES: [number and list]
              VIOLATED_RULES: [number and list]
              PREDICTION: PASS / FAIL / INSUFFICIENT_KNOWLEDGE
            END_PROMPT
            )
            echo "$PROMPT" > final_prompt.txt
            echo "Calling GPT-4o via Azure..."
            ANALYSIS_RESULT=$(curl -s -X POST "$AZURE_OPENAI_ENDPOINT/openai/deployments/$AZURE_OPENAI_DEPLOYMENT/chat/completions?api-version=2024-05-01-preview" \
              -H "Content-Type: application/json" \
              -H "api-key: $AZURE_OPENAI_API_KEY" \
              -d @- <<-EOF
            {
              "messages": [
                {"role": "system", "content": "You are a strict YAML workflow rule evaluator."},
                {"role": "user", "content": "$PROMPT"}
              ],
              "temperature": 0.0,
              "top_p": 1.0
            }
            EOF
            )
            echo "$ANALYSIS_RESULT" > final_analysis.txt
            echo "$ANALYSIS_RESULT" | jq '.' > final_analysis_response.json
            PREDICTION=$(echo "$ANALYSIS_RESULT" | jq -r '.choices[0].message.content' \
              | grep -i "PREDICTION:" | cut -d':' -f2 | tr -d '[:space:]')
            echo "prediction=$PREDICTION" >> "$GITHUB_OUTPUT"
            if [[ "$PREDICTION" == "PASS" ]]; then
              echo "✅ Workflow analysis PASSED"
              echo "should_continue=true" >> "$GITHUB_OUTPUT"
            elif [[ "$PREDICTION" == "FAIL" ]]; then
              echo "❌ Workflow analysis FAILED"
              echo "should_continue=false" >> "$GITHUB_OUTPUT"
              exit 1
            else
              echo "⚠️ Prediction was unclear or insufficient"
              echo "should_continue=false" >> "$GITHUB_OUTPUT"
              exit 1
            fi

      - name: Upload Comprehensive Analysis
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: comprehensive-analysis
          path: |
            final_analysis_response.json
            final_analysis.txt
            final_prompt.txt
            blob-data/

      - name: Trigger Main CI Workflow
        if: steps.final-analysis.outputs.should_continue == 'true'
        run: gh workflow run 'Main CI Workflow'
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
